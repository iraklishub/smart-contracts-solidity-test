import { ethers } from "ethers"
import * as fs from "fs"
import "dotenv/config"

const privateKey = process.env.PRIVATE_KEY!
const rpcURL = process.env.RPC_URL!

async function main() {
  const provider = new ethers.providers.JsonRpcProvider(rpcURL)

  const wallet = new ethers.Wallet(privateKey, provider)

  const abi = fs.readFileSync("./SimpleStorage_sol_SimpleStorage.abi", "utf8")
  const binary = fs.readFileSync(
    "./SimpleStorage_sol_SimpleStorage.bin",
    "utf8"
  )

  const contractFactory = new ethers.ContractFactory(abi, binary, wallet)

  console.log("Deploying...")
  const contract = await contractFactory.deploy()
  await contract.deployTransaction.wait(1)

  // console.log("Transaction Data");
  // const nonce = await wallet.getTransactionCount();
  // const tx = {
  //   nonce,
  //   gasPrice: 20000000000,
  //   gasLimit: 1000000,
  //   to: null,
  //   value: 0,
  //   data: "0x608060405234801561001057600080fd5b5061093b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632e64cec11461005c5780633d3586251461007a5780636057361d146100aa5780636f760f41146100c65780639e7a13ad146100e2575b600080fd5b610064610113565b60405161007191906102b2565b60405180910390f35b610094600480360381019061008f9190610427565b61011c565b6040516100a191906102b2565b60405180910390f35b6100c460048036038101906100bf919061049c565b61014a565b005b6100e060048036038101906100db91906104c9565b610154565b005b6100fc60048036038101906100f7919061049c565b6101dd565b60405161010a9291906105a4565b60405180910390f35b60008054905090565b6001818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b8060008190555050565b600260405180604001604052808381526020018481525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010190816101b391906107e0565b505050806001836040516101c791906108ee565b9081526020016040518091039020819055505050565b600281815481106101ed57600080fd5b906000526020600020906002020160009150905080600001549080600101805461021690610603565b80601f016020809104026020016040519081016040528092919081815260200182805461024290610603565b801561028f5780601f106102645761010080835404028352916020019161028f565b820191906000526020600020905b81548152906001019060200180831161027257829003601f168201915b5050505050905082565b6000819050919050565b6102ac81610299565b82525050565b60006020820190506102c760008301846102a3565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610334826102eb565b810181811067ffffffffffffffff82111715610353576103526102fc565b5b80604052505050565b60006103666102cd565b9050610372828261032b565b919050565b600067ffffffffffffffff821115610392576103916102fc565b5b61039b826102eb565b9050602081019050919050565b82818337600083830152505050565b60006103ca6103c584610377565b61035c565b9050828152602081018484840111156103e6576103e56102e6565b5b6103f18482856103a8565b509392505050565b600082601f83011261040e5761040d6102e1565b5b813561041e8482602086016103b7565b91505092915050565b60006020828403121561043d5761043c6102d7565b5b600082013567ffffffffffffffff81111561045b5761045a6102dc565b5b610467848285016103f9565b91505092915050565b61047981610299565b811461048457600080fd5b50565b60008135905061049681610470565b92915050565b6000602082840312156104b2576104b16102d7565b5b60006104c084828501610487565b91505092915050565b600080604083850312156104e0576104df6102d7565b5b600083013567ffffffffffffffff8111156104fe576104fd6102dc565b5b61050a858286016103f9565b925050602061051b85828601610487565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561055f578082015181840152602081019050610544565b60008484015250505050565b600061057682610525565b6105808185610530565b9350610590818560208601610541565b610599816102eb565b840191505092915050565b60006040820190506105b960008301856102a3565b81810360208301526105cb818461056b565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061061b57607f821691505b60208210810361062e5761062d6105d4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026106967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610659565b6106a08683610659565b95508019841693508086168417925050509392505050565b6000819050919050565b60006106dd6106d86106d384610299565b6106b8565b610299565b9050919050565b6000819050919050565b6106f7836106c2565b61070b610703826106e4565b848454610666565b825550505050565b600090565b610720610713565b61072b8184846106ee565b505050565b5b8181101561074f57610744600082610718565b600181019050610731565b5050565b601f8211156107945761076581610634565b61076e84610649565b8101602085101561077d578190505b61079161078985610649565b830182610730565b50505b505050565b600082821c905092915050565b60006107b760001984600802610799565b1980831691505092915050565b60006107d083836107a6565b9150826002028217905092915050565b6107e982610525565b67ffffffffffffffff811115610802576108016102fc565b5b61080c8254610603565b610817828285610753565b600060209050601f83116001811461084a5760008415610838578287015190505b61084285826107c4565b8655506108aa565b601f19841661085886610634565b60005b828110156108805784890151825560018201915060208501945060208101905061085b565b8683101561089d5784890151610899601f8916826107a6565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60006108c882610525565b6108d281856108b2565b93506108e2818560208601610541565b80840191505092915050565b60006108fa82846108bd565b91508190509291505056fea264697066735822122046e115f3ecf8044cbfa170ee1f3481eb4b0615f302a4f463b8363cd2c6a0233664736f6c63430008120033",
  //   chainId: 1337,
  // };
  // const sentTxResponse = await wallet.sendTransaction(tx);
  // await sentTxResponse.wait(1);
  // console.log(sentTxResponse);

  const currentFavoriteNumber = await contract.retrieve()
  console.log(`Favorite Number: ${String(currentFavoriteNumber)}`)

  const transactionResponse = await contract.store("7")
  const transactionReceipt = await transactionResponse.wait(1)

  const updatedFavoriteNumber = await contract.retrieve()
  console.log(`Updated favorite Number: ${String(updatedFavoriteNumber)}`)
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error)
    process.exit(1)
  })
